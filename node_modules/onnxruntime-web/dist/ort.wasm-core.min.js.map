{"version":3,"sources":["webpack://ort/webpack/universalModuleDefinition","webpack://ort/../common/dist/lib/backend-impl.js","webpack://ort/../common/dist/lib/env.js","webpack://ort/../common/dist/lib/env-impl.js","webpack://ort/../common/dist/lib/tensor-impl.js","webpack://ort/../common/dist/lib/tensor.js","webpack://ort/../common/dist/lib/inference-session-impl.js","webpack://ort/../common/dist/lib/inference-session.js","webpack://ort/./lib/wasm/binding/ort-wasm.js","webpack://ort/./lib/backend-wasm.ts","webpack://ort/./lib/index.ts","webpack://ort/./lib/wasm/options-utils.ts","webpack://ort/./lib/wasm/proxy-wrapper.ts","webpack://ort/./lib/wasm/run-options.ts","webpack://ort/./lib/wasm/session-handler.ts","webpack://ort/./lib/wasm/session-options.ts","webpack://ort/./lib/wasm/string-utils.ts","webpack://ort/./lib/wasm/wasm-core-impl.ts","webpack://ort/./lib/wasm/wasm-factory.ts","webpack://ort/webpack/bootstrap","webpack://ort/webpack/runtime/define property getters","webpack://ort/webpack/runtime/hasOwnProperty shorthand","webpack://ort/webpack/runtime/make namespace object","webpack://ort/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","backends","backendsSortedByPriority","registerBackend","name","backend","priority","init","createSessionHandler","TypeError","currentBackend","undefined","Error","i","indexOf","splice","length","push","env","constructor","this","wasm","webgl","logLevelInternal","logLevel","value","isBigInt64ArrayAvailable","BigInt64Array","from","isBigUint64ArrayAvailable","BigUint64Array","NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP","Map","Float32Array","Uint8Array","Int8Array","Uint16Array","Int16Array","Int32Array","Float64Array","Uint32Array","NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP","set","Tensor","arg0","arg1","arg2","type","data","dims","Array","isArray","typedArrayConstructor","get","firstElementType","mappedType","size","dim","Number","isSafeInteger","RangeError","calculateSize","reshape","InferenceSession","handler","async","feeds","fetches","options","isFetchesEmpty","outputNames","isFetches","arg1Keys","Object","getOwnPropertyNames","v","inputNames","results","run","returnValue","key","hasOwnProperty","call","static","arg3","filePathOrUint8Array","ArrayBuffer","SharedArrayBuffer","buffer","byteOffset","byteLength","backendHints","executionProviders","map","backendNames","errors","backendName","backendInfo","initialized","aborted","isInitializing","initPromise","e","err","join","resolveBackend","startProfiling","endProfiling","_scriptDir","ortWasm","document","currentScript","src","b","aa","k","ready","Promise","a","c","y","A","B","fs","C","D","ba","assign","p","ca","window","t","importScripts","u","process","versions","node","x","__dirname","normalize","readFileSync","readFile","f","g","argv","replace","slice","on","inspect","location","href","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","onload","status","onerror","F","da","print","console","log","bind","E","printErr","warn","thisProgram","wasmBinary","noExitRuntime","WebAssembly","G","H","ia","M","J","N","O","ea","fa","TextDecoder","ha","decode","subarray","h","String","fromCharCode","l","I","K","charCodeAt","L","ja","HEAP8","HEAP16","HEAP32","HEAPU8","HEAPU16","HEAPU32","HEAPF32","HEAPF64","ka","la","ma","na","preRun","shift","unshift","S","P","Q","R","onAbort","RuntimeError","oa","startsWith","pa","locateFile","qa","T","sa","ra","Ga","za","Aa","ya","Fa","wa","xa","U","W","X","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","_","Y","Ba","Ca","Ea","d","m","n","toString","ua","z","getFullYear","getMonth","getDate","q","getDay","Date","w","getTime","setDate","setMonth","setFullYear","r","Da","ta","Ha","RegExp","va","split","substring","Math","floor","abs","includes","s","o","now","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","getSeconds","getMinutes","getHours","getTimezoneOffset","min","max","setTime","V","toTimeString","match","hrtime","performance","copyWithin","grow","forEach","j","asm","monitorRunDependencies","clearInterval","instance","fetch","credentials","then","ok","arrayBuffer","catch","resolve","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","apply","arguments","_OrtInit","_OrtCreateSessionOptions","_OrtAppendExecutionProvider","_OrtAddSessionConfigEntry","_OrtReleaseSessionOptions","_OrtCreateSession","_OrtReleaseSession","_OrtGetInputCount","_OrtGetOutputCount","_OrtGetInputName","_OrtGetOutputName","Z","_OrtFree","_OrtCreateTensor","$","_OrtGetTensorData","_OrtReleaseTensor","_OrtCreateRunOptions","_OrtAddRunConfigEntry","_OrtReleaseRunOptions","_OrtRun","_OrtEndProfiling","ga","_malloc","_free","_fflush","stackSave","stackRestore","Ia","stackAlloc","Ka","calledRun","onRuntimeInitialized","postRun","setStatus","setTimeout","___cxa_is_pointer_type","UTF8ToString","stringToUTF8","lengthBytesUTF8","Ja","preInit","pop","initializeFlags","initTimeout","simd","proxy","numThreads","isInteger","numCpuLogicalCores","cpus","hardwareConcurrency","ceil","wasmBackend","initWasm","pathOrBuffer","promisify","OnnxruntimeWebAssemblySessionHandler","loadModel","iterateExtraOptions","prefix","seen","has","add","entries","initializeWebAssembly","initOrt","loggingLevel","core","createSession","model","releaseSession","sessionId","inputIndices","inputs","outputIndices","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","terminate","tagDataOffset","tag","allocWasmString","extra","WeakSet","keyDataOffset","valueDataOffset","ortInit","getLogLevel","inputArray","kvp","tensor","index","outputs","result","setSessionOptions","sessionOptionsHandle","sessionOptions","session","use_ort_model_bytes_directly","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","enableCpuMemArena","enableMemPattern","executionMode","getExecutionMode","logIdDataOffset","logId","enableProfiling","ep","epName","epNameDataOffset","setExecutionProviders","dataLength","dataOffset","errorCode","activeSessions","modelDataOffset","sessionHandle","inputCount","outputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","delete","tensorDataTypeStringToEnum","tensorDataTypeEnumToString","typeProto","numericTensorTypeToTypedArray","runOptionsAllocs","inputValues","inputAllocs","dataType","dataByteLength","dataIndex","stack","dimsOffset","dimIndex","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","output","beforeGetTensorDataStack","tensorDataOffset","tensorDataIndex","dimsLength","reduce","stringData","offset","maxBytesToRead","profileFileName","extractTransferableBuffers","tensors","buffers","ortWasmFactoryThreaded","initializing","getWasmFileName","useSimd","useThreads","flags","timeout","MessageChannel","port1","postMessage","validate","isMultiThreadSupported","isSimdSupported","wasmPrefixOverride","wasmPaths","wasmFileName","wasmOverrideFileName","wasmPathOverride","isTimeout","tasks","reject","fileName","scriptDirectory","what","race","dispose","PThread","terminateAllThreads","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","defineProperty","enumerable","obj","prop","prototype","Symbol","toStringTag"],"mappings":"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","file":"ort.wasm-core.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ort\"] = factory();\n\telse\n\t\troot[\"ort\"] = factory();\n})(self, function() {\nreturn ","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nconst backends = {};\nconst backendsSortedByPriority = [];\n/**\n * Register a backend.\n *\n * @param name - the name as a key to lookup as an execution provider.\n * @param backend - the backend object.\n * @param priority - an integer indicating the priority of the backend. Higher number means higher priority. if priority\n * < 0, it will be considered as a 'beta' version and will not be used as a fallback backend by default.\n *\n * @internal\n */\nexport const registerBackend = (name, backend, priority) => {\n    if (backend && typeof backend.init === 'function' && typeof backend.createSessionHandler === 'function') {\n        const currentBackend = backends[name];\n        if (currentBackend === undefined) {\n            backends[name] = { backend, priority };\n        }\n        else if (currentBackend.priority > priority) {\n            // same name is already registered with a higher priority. skip registeration.\n            return;\n        }\n        else if (currentBackend.priority === priority) {\n            if (currentBackend.backend !== backend) {\n                throw new Error(`cannot register backend \"${name}\" using priority ${priority}`);\n            }\n        }\n        if (priority >= 0) {\n            const i = backendsSortedByPriority.indexOf(name);\n            if (i !== -1) {\n                backendsSortedByPriority.splice(i, 1);\n            }\n            for (let i = 0; i < backendsSortedByPriority.length; i++) {\n                if (backends[backendsSortedByPriority[i]].priority <= priority) {\n                    backendsSortedByPriority.splice(i, 0, name);\n                    return;\n                }\n            }\n            backendsSortedByPriority.push(name);\n        }\n        return;\n    }\n    throw new TypeError('not a valid backend');\n};\n/**\n * Resolve backend by specified hints.\n *\n * @param backendHints - a list of execution provider names to lookup. If omitted use registered backends as list.\n * @returns a promise that resolves to the backend.\n *\n * @internal\n */\nexport const resolveBackend = async (backendHints) => {\n    const backendNames = backendHints.length === 0 ? backendsSortedByPriority : backendHints;\n    const errors = [];\n    for (const backendName of backendNames) {\n        const backendInfo = backends[backendName];\n        if (backendInfo) {\n            if (backendInfo.initialized) {\n                return backendInfo.backend;\n            }\n            else if (backendInfo.aborted) {\n                continue; // current backend is unavailable; try next\n            }\n            const isInitializing = !!backendInfo.initPromise;\n            try {\n                if (!isInitializing) {\n                    backendInfo.initPromise = backendInfo.backend.init();\n                }\n                await backendInfo.initPromise;\n                backendInfo.initialized = true;\n                return backendInfo.backend;\n            }\n            catch (e) {\n                if (!isInitializing) {\n                    errors.push({ name: backendName, err: e });\n                }\n                backendInfo.aborted = true;\n            }\n            finally {\n                delete backendInfo.initPromise;\n            }\n        }\n    }\n    throw new Error(`no available backend found. ERR: ${errors.map(e => `[${e.name}] ${e.err}`).join(', ')}`);\n};\n//# sourceMappingURL=backend-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { EnvImpl } from './env-impl';\n/**\n * Represent a set of flags as a global singleton.\n */\nexport const env = new EnvImpl();\n//# sourceMappingURL=env.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nexport class EnvImpl {\n    constructor() {\n        this.wasm = {};\n        this.webgl = {};\n        this.logLevelInternal = 'warning';\n    }\n    // TODO standadize the getter and setter convention in env for other fields.\n    set logLevel(value) {\n        if (value === undefined) {\n            return;\n        }\n        if (typeof value !== 'string' || ['verbose', 'info', 'warning', 'error', 'fatal'].indexOf(value) === -1) {\n            throw new Error(`Unsupported logging level: ${value}`);\n        }\n        this.logLevelInternal = value;\n    }\n    get logLevel() {\n        return this.logLevelInternal;\n    }\n}\n//# sourceMappingURL=env-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nconst isBigInt64ArrayAvailable = typeof BigInt64Array !== 'undefined' && typeof BigInt64Array.from === 'function';\nconst isBigUint64ArrayAvailable = typeof BigUint64Array !== 'undefined' && typeof BigUint64Array.from === 'function';\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP = new Map([\n    ['float32', Float32Array],\n    ['uint8', Uint8Array],\n    ['int8', Int8Array],\n    ['uint16', Uint16Array],\n    ['int16', Int16Array],\n    ['int32', Int32Array],\n    ['bool', Uint8Array],\n    ['float64', Float64Array],\n    ['uint32', Uint32Array],\n]);\n// a runtime map that maps type string to TypedArray constructor. Should match Tensor.DataTypeMap.\nconst NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP = new Map([\n    [Float32Array, 'float32'],\n    [Uint8Array, 'uint8'],\n    [Int8Array, 'int8'],\n    [Uint16Array, 'uint16'],\n    [Int16Array, 'int16'],\n    [Int32Array, 'int32'],\n    [Float64Array, 'float64'],\n    [Uint32Array, 'uint32'],\n]);\nif (isBigInt64ArrayAvailable) {\n    NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('int64', BigInt64Array);\n    NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigInt64Array, 'int64');\n}\nif (isBigUint64ArrayAvailable) {\n    NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.set('uint64', BigUint64Array);\n    NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.set(BigUint64Array, 'uint64');\n}\n/**\n * calculate size from dims.\n *\n * @param dims the dims array. May be an illegal input.\n */\nconst calculateSize = (dims) => {\n    let size = 1;\n    for (let i = 0; i < dims.length; i++) {\n        const dim = dims[i];\n        if (typeof dim !== 'number' || !Number.isSafeInteger(dim)) {\n            throw new TypeError(`dims[${i}] must be an integer, got: ${dim}`);\n        }\n        if (dim < 0) {\n            throw new RangeError(`dims[${i}] must be a non-negative integer, got: ${dim}`);\n        }\n        size *= dim;\n    }\n    return size;\n};\nexport class Tensor {\n    constructor(arg0, arg1, arg2) {\n        let type;\n        let data;\n        let dims;\n        // check whether arg0 is type or data\n        if (typeof arg0 === 'string') {\n            //\n            // Override: constructor(type, data, ...)\n            //\n            type = arg0;\n            dims = arg2;\n            if (arg0 === 'string') {\n                // string tensor\n                if (!Array.isArray(arg1)) {\n                    throw new TypeError('A string tensor\\'s data must be a string array.');\n                }\n                // we don't check whether every element in the array is string; this is too slow. we assume it's correct and\n                // error will be populated at inference\n                data = arg1;\n            }\n            else {\n                // numeric tensor\n                const typedArrayConstructor = NUMERIC_TENSOR_TYPE_TO_TYPEDARRAY_MAP.get(arg0);\n                if (typedArrayConstructor === undefined) {\n                    throw new TypeError(`Unsupported tensor type: ${arg0}.`);\n                }\n                if (Array.isArray(arg1)) {\n                    // use 'as any' here because TypeScript's check on type of 'SupportedTypedArrayConstructors.from()' produces\n                    // incorrect results.\n                    // 'typedArrayConstructor' should be one of the typed array prototype objects.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = typedArrayConstructor.from(arg1);\n                }\n                else if (arg1 instanceof typedArrayConstructor) {\n                    data = arg1;\n                }\n                else {\n                    throw new TypeError(`A ${type} tensor's data must be type of ${typedArrayConstructor}`);\n                }\n            }\n        }\n        else {\n            //\n            // Override: constructor(data, ...)\n            //\n            dims = arg1;\n            if (Array.isArray(arg0)) {\n                // only boolean[] and string[] is supported\n                if (arg0.length === 0) {\n                    throw new TypeError('Tensor type cannot be inferred from an empty array.');\n                }\n                const firstElementType = typeof arg0[0];\n                if (firstElementType === 'string') {\n                    type = 'string';\n                    data = arg0;\n                }\n                else if (firstElementType === 'boolean') {\n                    type = 'bool';\n                    // 'arg0' is of type 'boolean[]'. Uint8Array.from(boolean[]) actually works, but typescript thinks this is\n                    // wrong type. We use 'as any' to make it happy.\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    data = Uint8Array.from(arg0);\n                }\n                else {\n                    throw new TypeError(`Invalid element type of data array: ${firstElementType}.`);\n                }\n            }\n            else {\n                // get tensor type from TypedArray\n                const mappedType = NUMERIC_TENSOR_TYPEDARRAY_TO_TYPE_MAP.get(arg0.constructor);\n                if (mappedType === undefined) {\n                    throw new TypeError(`Unsupported type for tensor data: ${arg0.constructor}.`);\n                }\n                type = mappedType;\n                data = arg0;\n            }\n        }\n        // type and data is processed, now processing dims\n        if (dims === undefined) {\n            // assume 1-D tensor if dims omitted\n            dims = [data.length];\n        }\n        else if (!Array.isArray(dims)) {\n            throw new TypeError('A tensor\\'s dims must be a number array');\n        }\n        // perform check\n        const size = calculateSize(dims);\n        if (size !== data.length) {\n            throw new Error(`Tensor's size(${size}) does not match data length(${data.length}).`);\n        }\n        this.dims = dims;\n        this.type = type;\n        this.data = data;\n        this.size = size;\n    }\n    // #endregion\n    // #region tensor utilities\n    reshape(dims) {\n        return new Tensor(this.type, this.data, dims);\n    }\n}\n//# sourceMappingURL=tensor-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { Tensor as TensorImpl } from './tensor-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const Tensor = TensorImpl;\n//# sourceMappingURL=tensor.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { resolveBackend } from './backend-impl';\nimport { Tensor } from './tensor';\nexport class InferenceSession {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    async run(feeds, arg1, arg2) {\n        const fetches = {};\n        let options = {};\n        // check inputs\n        if (typeof feeds !== 'object' || feeds === null || feeds instanceof Tensor || Array.isArray(feeds)) {\n            throw new TypeError('\\'feeds\\' must be an object that use input names as keys and OnnxValue as corresponding values.');\n        }\n        let isFetchesEmpty = true;\n        // determine which override is being used\n        if (typeof arg1 === 'object') {\n            if (arg1 === null) {\n                throw new TypeError('Unexpected argument[1]: cannot be null.');\n            }\n            if (arg1 instanceof Tensor) {\n                throw new TypeError('\\'fetches\\' cannot be a Tensor');\n            }\n            if (Array.isArray(arg1)) {\n                if (arg1.length === 0) {\n                    throw new TypeError('\\'fetches\\' cannot be an empty array.');\n                }\n                isFetchesEmpty = false;\n                // output names\n                for (const name of arg1) {\n                    if (typeof name !== 'string') {\n                        throw new TypeError('\\'fetches\\' must be a string array or an object.');\n                    }\n                    if (this.outputNames.indexOf(name) === -1) {\n                        throw new RangeError(`'fetches' contains invalid output name: ${name}.`);\n                    }\n                    fetches[name] = null;\n                }\n                if (typeof arg2 === 'object' && arg2 !== null) {\n                    options = arg2;\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'options\\' must be an object.');\n                }\n            }\n            else {\n                // decide whether arg1 is fetches or options\n                // if any output name is present and its value is valid OnnxValue, we consider it fetches\n                let isFetches = false;\n                const arg1Keys = Object.getOwnPropertyNames(arg1);\n                for (const name of this.outputNames) {\n                    if (arg1Keys.indexOf(name) !== -1) {\n                        const v = arg1[name];\n                        if (v === null || v instanceof Tensor) {\n                            isFetches = true;\n                            isFetchesEmpty = false;\n                            fetches[name] = v;\n                        }\n                    }\n                }\n                if (isFetches) {\n                    if (typeof arg2 === 'object' && arg2 !== null) {\n                        options = arg2;\n                    }\n                    else if (typeof arg2 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else {\n                    options = arg1;\n                }\n            }\n        }\n        else if (typeof arg1 !== 'undefined') {\n            throw new TypeError('Unexpected argument[1]: must be \\'fetches\\' or \\'options\\'.');\n        }\n        // check if all inputs are in feed\n        for (const name of this.inputNames) {\n            if (typeof feeds[name] === 'undefined') {\n                throw new Error(`input '${name}' is missing in 'feeds'.`);\n            }\n        }\n        // if no fetches is specified, we use the full output names list\n        if (isFetchesEmpty) {\n            for (const name of this.outputNames) {\n                fetches[name] = null;\n            }\n        }\n        // feeds, fetches and options are prepared\n        const results = await this.handler.run(feeds, fetches, options);\n        const returnValue = {};\n        for (const key in results) {\n            if (Object.hasOwnProperty.call(results, key)) {\n                returnValue[key] = new Tensor(results[key].type, results[key].data, results[key].dims);\n            }\n        }\n        return returnValue;\n    }\n    static async create(arg0, arg1, arg2, arg3) {\n        // either load from a file or buffer\n        let filePathOrUint8Array;\n        let options = {};\n        if (typeof arg0 === 'string') {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof Uint8Array) {\n            filePathOrUint8Array = arg0;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n        }\n        else if (arg0 instanceof ArrayBuffer ||\n            (typeof SharedArrayBuffer !== 'undefined' && arg0 instanceof SharedArrayBuffer)) {\n            const buffer = arg0;\n            let byteOffset = 0;\n            let byteLength = arg0.byteLength;\n            if (typeof arg1 === 'object' && arg1 !== null) {\n                options = arg1;\n            }\n            else if (typeof arg1 === 'number') {\n                byteOffset = arg1;\n                if (!Number.isSafeInteger(byteOffset)) {\n                    throw new RangeError('\\'byteOffset\\' must be an integer.');\n                }\n                if (byteOffset < 0 || byteOffset >= buffer.byteLength) {\n                    throw new RangeError(`'byteOffset' is out of range [0, ${buffer.byteLength}).`);\n                }\n                byteLength = arg0.byteLength - byteOffset;\n                if (typeof arg2 === 'number') {\n                    byteLength = arg2;\n                    if (!Number.isSafeInteger(byteLength)) {\n                        throw new RangeError('\\'byteLength\\' must be an integer.');\n                    }\n                    if (byteLength <= 0 || byteOffset + byteLength > buffer.byteLength) {\n                        throw new RangeError(`'byteLength' is out of range (0, ${buffer.byteLength - byteOffset}].`);\n                    }\n                    if (typeof arg3 === 'object' && arg3 !== null) {\n                        options = arg3;\n                    }\n                    else if (typeof arg3 !== 'undefined') {\n                        throw new TypeError('\\'options\\' must be an object.');\n                    }\n                }\n                else if (typeof arg2 !== 'undefined') {\n                    throw new TypeError('\\'byteLength\\' must be a number.');\n                }\n            }\n            else if (typeof arg1 !== 'undefined') {\n                throw new TypeError('\\'options\\' must be an object.');\n            }\n            filePathOrUint8Array = new Uint8Array(buffer, byteOffset, byteLength);\n        }\n        else {\n            throw new TypeError('Unexpected argument[0]: must be \\'path\\' or \\'buffer\\'.');\n        }\n        // get backend hints\n        const eps = options.executionProviders || [];\n        const backendHints = eps.map(i => typeof i === 'string' ? i : i.name);\n        const backend = await resolveBackend(backendHints);\n        const handler = await backend.createSessionHandler(filePathOrUint8Array, options);\n        return new InferenceSession(handler);\n    }\n    startProfiling() {\n        this.handler.startProfiling();\n    }\n    endProfiling() {\n        this.handler.endProfiling();\n    }\n    get inputNames() {\n        return this.handler.inputNames;\n    }\n    get outputNames() {\n        return this.handler.outputNames;\n    }\n}\n//# sourceMappingURL=inference-session-impl.js.map","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { InferenceSession as InferenceSessionImpl } from './inference-session-impl';\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const InferenceSession = InferenceSessionImpl;\n//# sourceMappingURL=inference-session.js.map","\r\nvar ortWasm = (() => {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\r\n  return (\r\nfunction(ortWasm) {\r\n  ortWasm = ortWasm || {};\r\n\r\n\r\nvar b;b||(b=typeof ortWasm !== 'undefined' ? ortWasm : {});var aa,k;b.ready=new Promise(function(a,c){aa=a;k=c});var ba=Object.assign({},b),p=\"./this.program\",ca=\"object\"==typeof window,t=\"function\"==typeof importScripts,u=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,x=\"\",y,A,B,fs,C,D;\r\nif(u)x=t?require(\"path\").dirname(x)+\"/\":__dirname+\"/\",D=()=>{C||(fs=require(\"fs\"),C=require(\"path\"))},y=function(a,c){D();a=C.normalize(a);return fs.readFileSync(a,c?void 0:\"utf8\")},B=a=>{a=y(a,!0);a.buffer||(a=new Uint8Array(a));return a},A=(a,c,e)=>{D();a=C.normalize(a);fs.readFile(a,function(f,g){f?e(f):c(g.buffer)})},1<process.argv.length&&(p=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",function(a){throw a;}),process.on(\"unhandledRejection\",function(a){throw a;\r\n}),b.inspect=function(){return\"[Emscripten Module object]\"};else if(ca||t)t?x=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(x=document.currentScript.src),_scriptDir&&(x=_scriptDir),0!==x.indexOf(\"blob:\")?x=x.substr(0,x.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):x=\"\",y=a=>{var c=new XMLHttpRequest;c.open(\"GET\",a,!1);c.send(null);return c.responseText},t&&(B=a=>{var c=new XMLHttpRequest;c.open(\"GET\",a,!1);c.responseType=\"arraybuffer\";c.send(null);return new Uint8Array(c.response)}),\r\nA=(a,c,e)=>{var f=new XMLHttpRequest;f.open(\"GET\",a,!0);f.responseType=\"arraybuffer\";f.onload=()=>{200==f.status||0==f.status&&f.response?c(f.response):e()};f.onerror=e;f.send(null)};var da=b.print||console.log.bind(console),E=b.printErr||console.warn.bind(console);Object.assign(b,ba);ba=null;b.thisProgram&&(p=b.thisProgram);var F;b.wasmBinary&&(F=b.wasmBinary);var noExitRuntime=b.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&G(\"no native wasm support detected\");\r\nvar H,ea=!1,fa=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\r\nfunction ha(a,c,e){c>>>=0;var f=c+e;for(e=c;a[e]&&!(e>=f);)++e;if(16<e-c&&a.buffer&&fa)return fa.decode(a.subarray(c,e));for(f=\"\";c<e;){var g=a[c++];if(g&128){var h=a[c++]&63;if(192==(g&224))f+=String.fromCharCode((g&31)<<6|h);else{var l=a[c++]&63;g=224==(g&240)?(g&15)<<12|h<<6|l:(g&7)<<18|h<<12|l<<6|a[c++]&63;65536>g?f+=String.fromCharCode(g):(g-=65536,f+=String.fromCharCode(55296|g>>10,56320|g&1023))}}else f+=String.fromCharCode(g)}return f}function I(a,c){return(a>>>=0)?ha(J,a,c):\"\"}\r\nfunction K(a,c,e,f){e>>>=0;if(!(0<f))return 0;var g=e;f=e+f-1;for(var h=0;h<a.length;++h){var l=a.charCodeAt(h);if(55296<=l&&57343>=l){var q=a.charCodeAt(++h);l=65536+((l&1023)<<10)|q&1023}if(127>=l){if(e>=f)break;c[e++>>>0]=l}else{if(2047>=l){if(e+1>=f)break;c[e++>>>0]=192|l>>6}else{if(65535>=l){if(e+2>=f)break;c[e++>>>0]=224|l>>12}else{if(e+3>=f)break;c[e++>>>0]=240|l>>18;c[e++>>>0]=128|l>>12&63}c[e++>>>0]=128|l>>6&63}c[e++>>>0]=128|l&63}}c[e>>>0]=0;return e-g}\r\nfunction L(a){for(var c=0,e=0;e<a.length;++e){var f=a.charCodeAt(e);127>=f?c++:2047>=f?c+=2:55296<=f&&57343>=f?(c+=4,++e):c+=3}return c}var ia,M,J,N,O;function ja(){var a=H.buffer;ia=a;b.HEAP8=M=new Int8Array(a);b.HEAP16=new Int16Array(a);b.HEAP32=N=new Int32Array(a);b.HEAPU8=J=new Uint8Array(a);b.HEAPU16=new Uint16Array(a);b.HEAPU32=O=new Uint32Array(a);b.HEAPF32=new Float32Array(a);b.HEAPF64=new Float64Array(a)}var ka=[],la=[],ma=[];function na(){var a=b.preRun.shift();ka.unshift(a)}\r\nvar P=0,Q=null,R=null;function G(a){if(b.onAbort)b.onAbort(a);a=\"Aborted(\"+a+\")\";E(a);ea=!0;a=new WebAssembly.RuntimeError(a+\". Build with -sASSERTIONS for more info.\");k(a);throw a;}function oa(){return S.startsWith(\"data:application/octet-stream;base64,\")}var S;S=\"ort-wasm.wasm\";if(!oa()){var pa=S;S=b.locateFile?b.locateFile(pa,x):x+pa}function qa(){var a=S;try{if(a==S&&F)return new Uint8Array(F);if(B)return B(a);throw\"both async and sync fetching of the wasm failed\";}catch(c){G(c)}}\r\nfunction ra(){if(!F&&(ca||t)){if(\"function\"==typeof fetch&&!S.startsWith(\"file://\"))return fetch(S,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+S+\"'\";return a.arrayBuffer()}).catch(function(){return qa()});if(A)return new Promise(function(a,c){A(S,function(e){a(new Uint8Array(e))},c)})}return Promise.resolve().then(function(){return qa()})}function T(a){for(;0<a.length;)a.shift()(b)}\r\nfunction sa(a){this.ra=a-24;this.Ga=function(c){O[this.ra+4>>2>>>0]=c};this.za=function(c){O[this.ra+8>>2>>>0]=c};this.Aa=function(){N[this.ra>>2>>>0]=0};this.ya=function(){M[this.ra+12>>0>>>0]=0};this.Fa=function(){M[this.ra+13>>0>>>0]=0};this.wa=function(c,e){this.xa();this.Ga(c);this.za(e);this.Aa();this.ya();this.Fa()};this.xa=function(){O[this.ra+16>>2>>>0]=0}}var ta=0;function xa(a){var c=L(a)+1,e=U(c);e&&K(a,M,e,c);return e}\r\nfunction ya(a,c,e){function f(w){return(w=w.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?w[1]:\"GMT\"}var g=(new Date).getFullYear(),h=new Date(g,0,1),l=new Date(g,6,1);g=h.getTimezoneOffset();var q=l.getTimezoneOffset();N[a>>2>>>0]=60*Math.max(g,q);N[c>>2>>>0]=Number(g!=q);a=f(h);c=f(l);a=xa(a);c=xa(c);q<g?(O[e>>2>>>0]=a,O[e+4>>2>>>0]=c):(O[e>>2>>>0]=c,O[e+4>>2>>>0]=a)}function V(a,c,e){V.va||(V.va=!0,ya(a,c,e))}var W={};\r\nfunction za(){if(!X){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:p||\"./this.program\"},c;for(c in W)void 0===W[c]?delete a[c]:a[c]=W[c];var e=[];for(c in a)e.push(c+\"=\"+a[c]);X=e}return X}var X,Aa=[null,[],[]];function Y(a){return 0===a%4&&(0!==a%100||0===a%400)}var Ba=[31,29,31,30,31,30,31,31,30,31,30,31],Ca=[31,28,31,30,31,30,31,31,30,31,30,31];\r\nfunction Da(a){var c=Array(L(a)+1);K(a,c,0,c.length);return c}\r\nfunction Ea(a,c,e,f){function g(d,m,n){for(d=\"number\"==typeof d?d.toString():d||\"\";d.length<m;)d=n[0]+d;return d}function h(d,m){return g(d,m,\"0\")}function l(d,m){function n(ua){return 0>ua?-1:0<ua?1:0}var z;0===(z=n(d.getFullYear()-m.getFullYear()))&&0===(z=n(d.getMonth()-m.getMonth()))&&(z=n(d.getDate()-m.getDate()));return z}function q(d){switch(d.getDay()){case 0:return new Date(d.getFullYear()-1,11,29);case 1:return d;case 2:return new Date(d.getFullYear(),0,3);case 3:return new Date(d.getFullYear(),\r\n0,2);case 4:return new Date(d.getFullYear(),0,1);case 5:return new Date(d.getFullYear()-1,11,31);case 6:return new Date(d.getFullYear()-1,11,30)}}function w(d){var m=d.pa;for(d=new Date((new Date(d.qa+1900,0,1)).getTime());0<m;){var n=d.getMonth(),z=(Y(d.getFullYear())?Ba:Ca)[n];if(m>z-d.getDate())m-=z-d.getDate()+1,d.setDate(1),11>n?d.setMonth(n+1):(d.setMonth(0),d.setFullYear(d.getFullYear()+1));else{d.setDate(d.getDate()+m);break}}n=new Date(d.getFullYear()+1,0,4);m=q(new Date(d.getFullYear(),\r\n0,4));n=q(n);return 0>=l(m,d)?0>=l(n,d)?d.getFullYear()+1:d.getFullYear():d.getFullYear()-1}var v=N[f+40>>2>>>0];f={Da:N[f>>2>>>0],Ca:N[f+4>>2>>>0],sa:N[f+8>>2>>>0],ua:N[f+12>>2>>>0],ta:N[f+16>>2>>>0],qa:N[f+20>>2>>>0],ka:N[f+24>>2>>>0],pa:N[f+28>>2>>>0],Ha:N[f+32>>2>>>0],Ba:N[f+36>>2>>>0],Ea:v?I(v):\"\"};e=I(e);v={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\r\n\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var r in v)e=e.replace(new RegExp(r,\"g\"),v[r]);var va=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),wa=\"January February March April May June July August September October November December\".split(\" \");v={\"%a\":function(d){return va[d.ka].substring(0,3)},\"%A\":function(d){return va[d.ka]},\"%b\":function(d){return wa[d.ta].substring(0,\r\n3)},\"%B\":function(d){return wa[d.ta]},\"%C\":function(d){return h((d.qa+1900)/100|0,2)},\"%d\":function(d){return h(d.ua,2)},\"%e\":function(d){return g(d.ua,2,\" \")},\"%g\":function(d){return w(d).toString().substring(2)},\"%G\":function(d){return w(d)},\"%H\":function(d){return h(d.sa,2)},\"%I\":function(d){d=d.sa;0==d?d=12:12<d&&(d-=12);return h(d,2)},\"%j\":function(d){for(var m=0,n=0;n<=d.ta-1;m+=(Y(d.qa+1900)?Ba:Ca)[n++]);return h(d.ua+m,3)},\"%m\":function(d){return h(d.ta+1,2)},\"%M\":function(d){return h(d.Ca,\r\n2)},\"%n\":function(){return\"\\n\"},\"%p\":function(d){return 0<=d.sa&&12>d.sa?\"AM\":\"PM\"},\"%S\":function(d){return h(d.Da,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(d){return d.ka||7},\"%U\":function(d){return h(Math.floor((d.pa+7-d.ka)/7),2)},\"%V\":function(d){var m=Math.floor((d.pa+7-(d.ka+6)%7)/7);2>=(d.ka+371-d.pa-2)%7&&m++;if(m)53==m&&(n=(d.ka+371-d.pa)%7,4==n||3==n&&Y(d.qa)||(m=1));else{m=52;var n=(d.ka+7-d.pa-1)%7;(4==n||5==n&&Y(d.qa%400-1))&&m++}return h(m,2)},\"%w\":function(d){return d.ka},\"%W\":function(d){return h(Math.floor((d.pa+\r\n7-(d.ka+6)%7)/7),2)},\"%y\":function(d){return(d.qa+1900).toString().substring(2)},\"%Y\":function(d){return d.qa+1900},\"%z\":function(d){d=d.Ba;var m=0<=d;d=Math.abs(d)/60;return(m?\"+\":\"-\")+String(\"0000\"+(d/60*100+d%60)).slice(-4)},\"%Z\":function(d){return d.Ea},\"%%\":function(){return\"%\"}};e=e.replace(/%%/g,\"\\x00\\x00\");for(r in v)e.includes(r)&&(e=e.replace(new RegExp(r,\"g\"),v[r](f)));e=e.replace(/\\0\\0/g,\"%\");r=Da(e);if(r.length>c)return 0;M.set(r,a>>>0);return r.length-1}\r\nvar Fa={a:function(a){return U(a+24)+24},b:function(a,c,e){(new sa(a)).wa(c,e);ta++;throw a;},g:function(){return 0},J:function(){},w:function(){},z:function(){},s:function(){return 0},H:function(){},C:function(){},G:function(){},k:function(){},y:function(){},u:function(){},I:function(){},v:function(){},o:function(){},q:function(){G(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},p:function(){G(\"To use dlopen, you need enable dynamic linking, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},\r\nl:function(){return Date.now()},K:function(){return!0},L:function(a,c){a=new Date(1E3*(O[a>>>2]+4294967296*N[a+4>>>2]));N[c>>2>>>0]=a.getUTCSeconds();N[c+4>>2>>>0]=a.getUTCMinutes();N[c+8>>2>>>0]=a.getUTCHours();N[c+12>>2>>>0]=a.getUTCDate();N[c+16>>2>>>0]=a.getUTCMonth();N[c+20>>2>>>0]=a.getUTCFullYear()-1900;N[c+24>>2>>>0]=a.getUTCDay();N[c+28>>2>>>0]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0},M:function(a,c){a=new Date(1E3*(O[a>>>2]+4294967296*N[a+4>>>2]));N[c>>2>>>0]=a.getSeconds();\r\nN[c+4>>2>>>0]=a.getMinutes();N[c+8>>2>>>0]=a.getHours();N[c+12>>2>>>0]=a.getDate();N[c+16>>2>>>0]=a.getMonth();N[c+20>>2>>>0]=a.getFullYear()-1900;N[c+24>>2>>>0]=a.getDay();var e=new Date(a.getFullYear(),0,1);N[c+28>>2>>>0]=(a.getTime()-e.getTime())/864E5|0;N[c+36>>2>>>0]=-(60*a.getTimezoneOffset());var f=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();e=e.getTimezoneOffset();N[c+32>>2>>>0]=(f!=e&&a.getTimezoneOffset()==Math.min(e,f))|0},m:function(a){var c=new Date(N[a+20>>2>>>0]+1900,N[a+16>>\r\n2>>>0],N[a+12>>2>>>0],N[a+8>>2>>>0],N[a+4>>2>>>0],N[a>>2>>>0],0),e=N[a+32>>2>>>0],f=c.getTimezoneOffset(),g=new Date(c.getFullYear(),0,1),h=(new Date(c.getFullYear(),6,1)).getTimezoneOffset(),l=g.getTimezoneOffset(),q=Math.min(l,h);0>e?N[a+32>>2>>>0]=Number(h!=l&&q==f):0<e!=(q==f)&&(h=Math.max(l,h),c.setTime(c.getTime()+6E4*((0<e?q:h)-f)));N[a+24>>2>>>0]=c.getDay();N[a+28>>2>>>0]=(c.getTime()-g.getTime())/864E5|0;N[a>>2>>>0]=c.getSeconds();N[a+4>>2>>>0]=c.getMinutes();N[a+8>>2>>>0]=c.getHours();N[a+\r\n12>>2>>>0]=c.getDate();N[a+16>>2>>>0]=c.getMonth();return c.getTime()/1E3|0},A:function(){return-52},B:function(){},n:V,d:function(){G(\"\")},t:function(){return 4294901760},h:u?()=>{var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:()=>performance.now(),F:function(a,c,e){J.copyWithin(a>>>0,c>>>0,c+e>>>0)},f:function(a){var c=J.length;a>>>=0;if(4294901760<a)return!1;for(var e=1;4>=e;e*=2){var f=c*(1+.2/e);f=Math.min(f,a+100663296);var g=Math;f=Math.max(a,f);g=g.min.call(g,4294901760,f+(65536-f%65536)%\r\n65536);a:{try{H.grow(g-ia.byteLength+65535>>>16);ja();var h=1;break a}catch(l){}h=void 0}if(h)return!0}return!1},D:function(a,c){var e=0;za().forEach(function(f,g){var h=c+e;g=O[a+4*g>>2>>>0]=h;for(h=0;h<f.length;++h)M[g++>>0>>>0]=f.charCodeAt(h);M[g>>0>>>0]=0;e+=f.length+1});return 0},E:function(a,c){var e=za();O[a>>2>>>0]=e.length;var f=0;e.forEach(function(g){f+=g.length+1});O[c>>2>>>0]=f;return 0},e:function(){return 52},j:function(){return 52},r:function(){return 70},i:function(a,c,e,f){for(var g=\r\n0,h=0;h<e;h++){var l=O[c>>2>>>0],q=O[c+4>>2>>>0];c+=8;for(var w=0;w<q;w++){var v=J[l+w>>>0],r=Aa[a];0===v||10===v?((1===a?da:E)(ha(r,0)),r.length=0):r.push(v)}g+=q}O[f>>2>>>0]=g;return 0},x:Ea,c:function(a,c,e,f){return Ea(a,c,e,f)}};\r\n(function(){function a(g){b.asm=g.exports;H=b.asm.N;ja();la.unshift(b.asm.O);P--;b.monitorRunDependencies&&b.monitorRunDependencies(P);0==P&&(null!==Q&&(clearInterval(Q),Q=null),R&&(g=R,R=null,g()))}function c(g){a(g.instance)}function e(g){return ra().then(function(h){return WebAssembly.instantiate(h,f)}).then(function(h){return h}).then(g,function(h){E(\"failed to asynchronously prepare wasm: \"+h);G(h)})}var f={a:Fa};P++;b.monitorRunDependencies&&b.monitorRunDependencies(P);if(b.instantiateWasm)try{return b.instantiateWasm(f,\r\na)}catch(g){return E(\"Module.instantiateWasm callback failed with error: \"+g),!1}(function(){return F||\"function\"!=typeof WebAssembly.instantiateStreaming||oa()||S.startsWith(\"file://\")||u||\"function\"!=typeof fetch?e(c):fetch(S,{credentials:\"same-origin\"}).then(function(g){return WebAssembly.instantiateStreaming(g,f).then(c,function(h){E(\"wasm streaming compile failed: \"+h);E(\"falling back to ArrayBuffer instantiation\");return e(c)})})})().catch(k);return{}})();\r\nb.___wasm_call_ctors=function(){return(b.___wasm_call_ctors=b.asm.O).apply(null,arguments)};b._OrtInit=function(){return(b._OrtInit=b.asm.P).apply(null,arguments)};b._OrtCreateSessionOptions=function(){return(b._OrtCreateSessionOptions=b.asm.Q).apply(null,arguments)};b._OrtAppendExecutionProvider=function(){return(b._OrtAppendExecutionProvider=b.asm.R).apply(null,arguments)};b._OrtAddSessionConfigEntry=function(){return(b._OrtAddSessionConfigEntry=b.asm.S).apply(null,arguments)};\r\nb._OrtReleaseSessionOptions=function(){return(b._OrtReleaseSessionOptions=b.asm.T).apply(null,arguments)};b._OrtCreateSession=function(){return(b._OrtCreateSession=b.asm.U).apply(null,arguments)};b._OrtReleaseSession=function(){return(b._OrtReleaseSession=b.asm.V).apply(null,arguments)};b._OrtGetInputCount=function(){return(b._OrtGetInputCount=b.asm.W).apply(null,arguments)};b._OrtGetOutputCount=function(){return(b._OrtGetOutputCount=b.asm.X).apply(null,arguments)};\r\nb._OrtGetInputName=function(){return(b._OrtGetInputName=b.asm.Y).apply(null,arguments)};b._OrtGetOutputName=function(){return(b._OrtGetOutputName=b.asm.Z).apply(null,arguments)};b._OrtFree=function(){return(b._OrtFree=b.asm._).apply(null,arguments)};b._OrtCreateTensor=function(){return(b._OrtCreateTensor=b.asm.$).apply(null,arguments)};b._OrtGetTensorData=function(){return(b._OrtGetTensorData=b.asm.aa).apply(null,arguments)};\r\nb._OrtReleaseTensor=function(){return(b._OrtReleaseTensor=b.asm.ba).apply(null,arguments)};b._OrtCreateRunOptions=function(){return(b._OrtCreateRunOptions=b.asm.ca).apply(null,arguments)};b._OrtAddRunConfigEntry=function(){return(b._OrtAddRunConfigEntry=b.asm.da).apply(null,arguments)};b._OrtReleaseRunOptions=function(){return(b._OrtReleaseRunOptions=b.asm.ea).apply(null,arguments)};b._OrtRun=function(){return(b._OrtRun=b.asm.fa).apply(null,arguments)};\r\nb._OrtEndProfiling=function(){return(b._OrtEndProfiling=b.asm.ga).apply(null,arguments)};var U=b._malloc=function(){return(U=b._malloc=b.asm.ha).apply(null,arguments)};b._free=function(){return(b._free=b.asm.ia).apply(null,arguments)};b._fflush=function(){return(b._fflush=b.asm.ja).apply(null,arguments)};\r\nvar Ga=b.stackSave=function(){return(Ga=b.stackSave=b.asm.la).apply(null,arguments)},Ha=b.stackRestore=function(){return(Ha=b.stackRestore=b.asm.ma).apply(null,arguments)},Ia=b.stackAlloc=function(){return(Ia=b.stackAlloc=b.asm.na).apply(null,arguments)};b.___cxa_is_pointer_type=function(){return(b.___cxa_is_pointer_type=b.asm.oa).apply(null,arguments)};b.UTF8ToString=I;b.stringToUTF8=function(a,c,e){return K(a,J,c,e)};b.lengthBytesUTF8=L;b.stackSave=Ga;b.stackRestore=Ha;b.stackAlloc=Ia;var Z;\r\nR=function Ja(){Z||Ka();Z||(R=Ja)};\r\nfunction Ka(){function a(){if(!Z&&(Z=!0,b.calledRun=!0,!ea)){T(la);aa(b);if(b.onRuntimeInitialized)b.onRuntimeInitialized();if(b.postRun)for(\"function\"==typeof b.postRun&&(b.postRun=[b.postRun]);b.postRun.length;){var c=b.postRun.shift();ma.unshift(c)}T(ma)}}if(!(0<P)){if(b.preRun)for(\"function\"==typeof b.preRun&&(b.preRun=[b.preRun]);b.preRun.length;)na();T(ka);0<P||(b.setStatus?(b.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){b.setStatus(\"\")},1);a()},1)):a())}}\r\nif(b.preInit)for(\"function\"==typeof b.preInit&&(b.preInit=[b.preInit]);0<b.preInit.length;)b.preInit.pop()();Ka();\r\n\r\n\r\n  return ortWasm.ready\r\n}\r\n);\r\n})();\r\nif (typeof exports === 'object' && typeof module === 'object')\r\n  module.exports = ortWasm;\r\nelse if (typeof define === 'function' && define['amd'])\r\n  define([], function() { return ortWasm; });\r\nelse if (typeof exports === 'object')\r\n  exports[\"ortWasm\"] = ortWasm;\r\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\nimport {promisify} from 'util';\n\nimport {initWasm} from './wasm/proxy-wrapper';\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    let buffer: Uint8Array;\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        buffer = await promisify(readFile)(pathOrBuffer);\n      } else {\n        // browser\n        const response = await fetch(pathOrBuffer);\n        const arrayBuffer = await response.arrayBuffer();\n        buffer = new Uint8Array(arrayBuffer);\n      }\n    } else {\n      buffer = pathOrBuffer;\n    }\n\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(buffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports */\n// We use \"require\" instead of \"import\" here because import statement must be put in top level. Our current code does\n// not allow terser to tree-shaking code as expected because some codes are treated as having side effects.\n// So we import code inside the if-clause to allow terser remove the code safely.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\n\nif (!BUILD_DEFS.DISABLE_WEBGL) {\n  const onnxjsBackend = require('./backend-onnxjs').onnxjsBackend;\n  registerBackend('webgl', onnxjsBackend, -10);\n}\nif (!BUILD_DEFS.DISABLE_WASM) {\n  const wasmBackend = require('./backend-wasm').wasmBackend;\n  registerBackend('cpu', wasmBackend, 10);\n  registerBackend('wasm', wasmBackend, 10);\n  registerBackend('xnnpack', wasmBackend, 9);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\n\nimport {OrtWasmMessage, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, (scriptSrc as string).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n  }\n};\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (!BUILD_DEFS.DISABLE_WASM_PROXY && isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {createSession, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\n\nlet ortInit: boolean;\n\n\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async loadModel(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\n      ortInit = true;\n    }\n\n    [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n};\n\nconst setExecutionProviders =\n    (sessionOptionsHandle: number, executionProviders: readonly InferenceSession.ExecutionProviderConfig[],\n     allocs: number[]): void => {\n      for (const ep of executionProviders) {\n        let epName = typeof ep === 'string' ? ep : ep.name;\n\n        // check EP name\n        switch (epName) {\n          case 'xnnpack':\n            epName = 'XNNPACK';\n            break;\n          case 'wasm':\n          case 'cpu':\n            continue;\n          default:\n            throw new Error(`not supported EP: ${epName}`);\n        }\n\n        const epNameDataOffset = allocWasmString(epName, allocs);\n        if (getInstance()._OrtAppendExecutionProvider(sessionOptionsHandle, epNameDataOffset) !== 0) {\n          throw new Error(`Can't append execution provider: ${epName}`);\n        }\n      }\n    };\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    if (options?.graphOptimizationLevel === undefined) {\n      sessionOptions.graphOptimizationLevel = 'all';\n    }\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\n\n    if (options?.enableCpuMemArena === undefined) {\n      sessionOptions.enableCpuMemArena = true;\n    }\n\n    if (options?.enableMemPattern === undefined) {\n      sessionOptions.enableMemPattern = true;\n    }\n\n    if (options?.executionMode === undefined) {\n      sessionOptions.executionMode = 'sequential';\n    }\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\n\n    let logIdDataOffset = 0;\n    if (options?.logId !== undefined) {\n      logIdDataOffset = allocWasmString(options.logId, allocs);\n    }\n\n    if (options?.logSeverityLevel === undefined) {\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.enableProfiling === undefined) {\n      sessionOptions.enableProfiling = false;\n    }\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\n        sessionOptions.logVerbosityLevel!);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (options?.executionProviders) {\n      setExecutionProviders(sessionOptionsHandle, options.executionProviders, allocs);\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\n\nimport {SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions = new Map<number, SessionMetadata>();\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n      const modelDataOffset = wasm._malloc(model.byteLength);\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        wasm.HEAPU8.set(model, modelDataOffset);\n        sessionHandle = wasm._OrtCreateSession(modelDataOffset, model.byteLength, sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelDataOffset);\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.set(sessionHandle, [sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [sessionHandle, inputNames, outputNames];\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions.delete(sessionId);\n};\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nconst enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int64';\n    case DataType.uint64:\n      return 'uint64';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * perform inference run\n */\nexport const run =\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\n      const wasm = getInstance();\n      const session = activeSessions.get(sessionId);\n      if (!session) {\n        throw new Error('invalid session id');\n      }\n      const sessionHandle = session[0];\n      const inputNamesUTF8Encoded = session[1];\n      const outputNamesUTF8Encoded = session[2];\n\n      const inputCount = inputIndices.length;\n      const outputCount = outputIndices.length;\n\n      let runOptionsHandle = 0;\n      let runOptionsAllocs: number[] = [];\n\n      const inputValues: number[] = [];\n      const inputAllocs: number[] = [];\n\n      try {\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n        // create input tensors\n        for (let i = 0; i < inputCount; i++) {\n          const dataType = inputs[i][0];\n          const dims = inputs[i][1];\n          const data = inputs[i][2];\n\n          let dataOffset: number;\n          let dataByteLength: number;\n\n          if (Array.isArray(data)) {\n            // string tensor\n            dataByteLength = 4 * data.length;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < data.length; i++) {\n              if (typeof data[i] !== 'string') {\n                throw new TypeError(`tensor data at index ${i} is not a string`);\n              }\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n            }\n          } else {\n            dataByteLength = data.byteLength;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n            if (tensor === 0) {\n              throw new Error('Can\\'t create a tensor');\n            }\n            inputValues.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        }\n\n        const beforeRunStack = wasm.stackSave();\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n        try {\n          let inputValuesIndex = inputValuesOffset / 4;\n          let inputNamesIndex = inputNamesOffset / 4;\n          let outputValuesIndex = outputValuesOffset / 4;\n          let outputNamesIndex = outputNamesOffset / 4;\n          for (let i = 0; i < inputCount; i++) {\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n          }\n          for (let i = 0; i < outputCount; i++) {\n            wasm.HEAPU32[outputValuesIndex++] = 0;\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n          }\n\n          // support RunOptions\n          let errorCode = wasm._OrtRun(\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n              outputValuesOffset, runOptionsHandle);\n\n          const output: SerializableTensor[] = [];\n\n          if (errorCode === 0) {\n            for (let i = 0; i < outputCount; i++) {\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n              const beforeGetTensorDataStack = wasm.stackSave();\n              // stack allocate 4 pointer value\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n              let type: Tensor.Type|undefined, dataOffset = 0;\n              try {\n                errorCode = wasm._OrtGetTensorData(\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n                if (errorCode !== 0) {\n                  throw new Error(`Can't access output tensor data. error code = ${errorCode}`);\n                }\n                let tensorDataIndex = tensorDataOffset / 4;\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n                const dims = [];\n                for (let i = 0; i < dimsLength; i++) {\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n                }\n                wasm._OrtFree(dimsOffset);\n\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n                type = tensorDataTypeEnumToString(dataType);\n                if (type === 'string') {\n                  const stringData: string[] = [];\n                  let dataIndex = dataOffset / 4;\n                  for (let i = 0; i < size; i++) {\n                    const offset = wasm.HEAPU32[dataIndex++];\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n                  }\n                  output.push([type, dims, stringData]);\n                } else {\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\n                  const data = new typedArrayConstructor(size);\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n                  output.push([type, dims, data]);\n                }\n              } finally {\n                wasm.stackRestore(beforeGetTensorDataStack);\n                if (type === 'string' && dataOffset) {\n                  wasm._free(dataOffset);\n                }\n                wasm._OrtReleaseTensor(tensor);\n              }\n            }\n          }\n\n          if (errorCode === 0) {\n            return output;\n          } else {\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n          }\n        } finally {\n          wasm.stackRestore(beforeRunStack);\n        }\n      } finally {\n        inputValues.forEach(wasm._OrtReleaseTensor);\n        inputAllocs.forEach(wasm._free);\n\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\n        runOptionsAllocs.forEach(wasm._free);\n      }\n    };\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions.get(sessionId);\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\nimport ortWasmFactory from './binding/ort-wasm.js';\n\nconst ortWasmFactoryThreaded: EmscriptenModuleFactory<OrtWasmModule> =\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    !BUILD_DEFS.DISABLE_WASM_THREAD ? require('./binding/ort-wasm-threaded.js') : ortWasmFactory;\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n\n    // The binary data is generated from the following code by wat2wasm:\n    //\n    // (module\n    //   (type $t0 (func))\n    //   (func $f0 (type $t0)\n    //     (drop\n    //       (i32x4.dot_i16x8_s\n    //         (i8x16.splat\n    //           (i32.const 0))\n    //         (v128.const i32x4 0x00000000 0x00000000 0x00000000 0x00000000)))))\n\n    return WebAssembly.validate(new Uint8Array([\n      0,   97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1,   28,  0, 65, 0,\n      253, 15, 253, 12,  0, 0, 0, 0, 0, 0, 0, 0,  0, 0, 0, 0, 0, 0, 0,  0,  253, 186, 1, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(false, useThreads);\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads && fileName.endsWith('.worker.js') &&\n            typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName === wasmFileName) {\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (!BUILD_DEFS.DISABLE_WASM_THREAD && useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode = `var ortWasmThreaded=(function(){var _scriptDir;return ${factory.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(18);\n"],"sourceRoot":""}